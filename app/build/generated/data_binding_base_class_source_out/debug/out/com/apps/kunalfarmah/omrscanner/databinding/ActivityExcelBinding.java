// Generated by view binder compiler. Do not edit!
package com.apps.kunalfarmah.omrscanner.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ListView;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.apps.kunalfarmah.omrscanner.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityExcelBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button btnUpDirectory;

  @NonNull
  public final Button btnViewSDCard;

  @NonNull
  public final ListView lvInternalStorage;

  @NonNull
  public final RelativeLayout relLayout;

  private ActivityExcelBinding(@NonNull RelativeLayout rootView, @NonNull Button btnUpDirectory,
      @NonNull Button btnViewSDCard, @NonNull ListView lvInternalStorage,
      @NonNull RelativeLayout relLayout) {
    this.rootView = rootView;
    this.btnUpDirectory = btnUpDirectory;
    this.btnViewSDCard = btnViewSDCard;
    this.lvInternalStorage = lvInternalStorage;
    this.relLayout = relLayout;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityExcelBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityExcelBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_excel, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityExcelBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnUpDirectory;
      Button btnUpDirectory = ViewBindings.findChildViewById(rootView, id);
      if (btnUpDirectory == null) {
        break missingId;
      }

      id = R.id.btnViewSDCard;
      Button btnViewSDCard = ViewBindings.findChildViewById(rootView, id);
      if (btnViewSDCard == null) {
        break missingId;
      }

      id = R.id.lvInternalStorage;
      ListView lvInternalStorage = ViewBindings.findChildViewById(rootView, id);
      if (lvInternalStorage == null) {
        break missingId;
      }

      id = R.id.relLayout;
      RelativeLayout relLayout = ViewBindings.findChildViewById(rootView, id);
      if (relLayout == null) {
        break missingId;
      }

      return new ActivityExcelBinding((RelativeLayout) rootView, btnUpDirectory, btnViewSDCard,
          lvInternalStorage, relLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
